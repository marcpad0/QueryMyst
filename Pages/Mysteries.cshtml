@page
@model QueryMyst.Pages.MysteriesModel
@{
    ViewData["Title"] = "Mysteries - QueryMyst";
}

<div class="hero-section mystery-hero">
    <div class="hero-content">
        <div class="logo-container">
            <span class="logo-icon">🔎</span>
            <h1 class="page-title">SQL Mysteries</h1>
        </div>
        <p class="tagline">Challenging enigmas awaiting your SQL expertise</p>
    </div>
</div>

<div class="container my-5">
    <div class="row justify-content-center">
        <div class="col-md-10">
            <div class="card main-card shadow">
                <div class="card-body p-5">
                    <h2 class="text-center mb-4">Available Mysteries</h2>
                    <p class="text-center lead mb-5">Select a mystery to begin your investigation. Each case has its unique database schema and requires specific SQL skills to solve.</p>

                    <!-- Wrap filters in a form -->
                    <form method="get" class="mystery-filters mb-4">
                        <div class="row g-3">
                            <div class="col-md-4">
                                <!-- Add name attribute and populate options -->
                                <select name="SelectedDifficulty" class="form-select" aria-label="Difficulty filter" asp-for="SelectedDifficulty" asp-items="@(new SelectList(Model.AvailableDifficulties))">
                                    <option value="">All Difficulties</option>
                                </select>
                            </div>
                            <div class="col-md-4">
                                <!-- Add name attribute and populate options -->
                                <select name="SelectedCategory" class="form-select" aria-label="Category filter" asp-for="SelectedCategory" asp-items="@(new SelectList(Model.AvailableCategories))">
                                    <option value="">All Categories</option>
                                </select>
                            </div>
                            <div class="col-md-4">
                                <div class="input-group">
                                    <!-- Add name attribute and bind value -->
                                    <input type="text" name="SearchTerm" class="form-control" placeholder="Search mysteries..." aria-label="Search mysteries" asp-for="SearchTerm">
                                    <!-- Change button type to submit -->
                                    <button class="btn btn-outline-primary" type="submit"><i class="bi bi-search"></i></button>
                                </div>
                            </div>
                        </div>
                    </form>

                    <div class="mystery-grid">
                        @if (Model.Mysteries.Any())
                        {
                            @foreach (var mystery in Model.Mysteries)
                            {
                                <div class="mystery-card">
                                    <div class="difficulty-badge @mystery.DifficultyClass">@mystery.Difficulty</div>
                                    <div class="mystery-icon">@Html.Raw(mystery.Icon)</div>
                                    <h3 class="mystery-title">@mystery.Title</h3>
                                    <p class="mystery-description">@mystery.Description</p>
                                    <div class="mystery-meta">
                                        <span class="badge bg-secondary">@mystery.Category</span>
                                        @* Ensure MysterySolvedCounts contains the key before accessing *@
                                        <span class="solved-count"><i class="bi bi-people-fill"></i> @(Model.MysterySolvedCounts.ContainsKey(mystery.Id) ? Model.MysterySolvedCounts[mystery.Id] : 0) solved</span>
                                    </div>
                                    <div class="skills-required">
                                        @if (mystery.RequiredSkills != null)
                                        {
                                            @foreach (var skill in mystery.RequiredSkills)
                                            {
                                                <span class="skill-tag">@skill</span>
                                            }
                                        }
                                    </div>
                                    <a href="/Mysteries/Details/@mystery.Id" class="btn btn-primary btn-block mt-3">Begin Investigation</a>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="col-12 text-center text-muted mt-4">
                                <p>No mysteries found matching your criteria.</p>
                            </div>
                        }
                    </div>

                    @* Keep pagination static for now, implementing dynamic pagination requires more effort *@
                    <div class="pagination-container mt-4">
                        <nav aria-label="Mystery pagination">
                            <ul class="pagination justify-content-center">
                                <li class="page-item disabled">
                                    <a class="page-link" href="#" tabindex="-1" aria-disabled="true">Previous</a>
                                </li>
                                <li class="page-item active" aria-current="page">
                                    <a class="page-link" href="#">1</a>
                                </li>
                                <li class="page-item"><a class="page-link" href="#">2</a></li>
                                <li class="page-item"><a class="page-link" href="#">3</a></li>
                                <li class="page-item">
                                    <a class="page-link" href="#">Next</a>
                                </li>
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row justify-content-center mt-5">
        <div class="col-md-10">
            <div class="card main-card shadow">
                <div class="card-body p-5">
                    <h2 class="text-center mb-4">Mystery Ranking System</h2>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="ranking-card">
                                <h4><i class="bi bi-trophy-fill"></i> Global Leaderboard</h4>
                                <p>Compete with SQL detectives worldwide and see who can solve mysteries the fastest with the most efficient queries.</p>
                                <a href="/Leaderboard" class="btn btn-outline-primary">View Leaderboard</a>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="ranking-card">
                                <h4><i class="bi bi-award-fill"></i> Achievement Badges</h4>
                                <p>Earn special badges for solving complex mysteries, using advanced SQL techniques, or completing challenge series.</p>
                                <a href="/Achievements" class="btn btn-outline-primary">View Badges</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>