@page "/mysteries"
@model QueryMyst.Pages.MysteriesModel
@{
    ViewData["Title"] = "SQL Mysteries";
}

<div class="hero-section mysteries-hero">
    <div class="hero-content">
        <h1 class="display-5 fw-bold"><i class="bi bi-search me-2"></i> Explore SQL Mysteries</h1>
        <p class="lead">Select a challenge and put your SQL skills to the test.</p>
    </div>
</div>

<div class="container my-5">

    <!-- Filter and Search Bar -->
    <div class="card shadow-sm mb-4">
        <div class="card-body p-3">
            <form method="get" class="row g-3 align-items-center">
                <div class="col-md-3">
                    <label for="SelectedDifficulty" class="visually-hidden">Difficulty</label>
                    <select asp-for="SelectedDifficulty" class="form-select" onchange="this.form.submit()">
                        <option value="All Difficulties">All Difficulties</option>
                        @foreach (var difficulty in Model.AvailableDifficulties)
                        {
                            <option value="@difficulty">@difficulty</option>
                        }
                    </select>
                </div>
                <div class="col-md-3">
                    <label for="SelectedCategory" class="visually-hidden">Category</label>
                    <select asp-for="SelectedCategory" class="form-select" onchange="this.form.submit()">
                        <option value="All Categories">All Categories</option>
                        @foreach (var category in Model.AvailableCategories)
                        {
                            <option value="@category">@category</option>
                        }
                    </select>
                </div>
                <div class="col-md-4">
                    <label for="SearchTerm" class="visually-hidden">Search</label>
                    <input type="search" asp-for="SearchTerm" class="form-control" placeholder="Search title or description...">
                </div>
                <div class="col-md-2 d-grid">
                    <button type="submit" class="btn btn-primary"><i class="bi bi-funnel-fill me-1"></i> Filter</button>
                </div>
                <!-- Add a hidden field for PageIndex to preserve pagination when filtering -->
                <input type="hidden" asp-for="PageIndex" value="1" />
            </form>
        </div>
    </div>

    <!-- Pagination Info -->
    <div class="d-flex justify-content-between align-items-center mb-3">
        <p class="text-muted mb-0">
            Showing @((Model.PageIndex - 1) * Model.PageSize + 1)-@(Math.Min(Model.PageIndex * Model.PageSize, Model.TotalItems)) 
            of @Model.TotalItems mysteries
        </p>
    </div>

    <!-- Mystery Grid -->
    @if (Model.Mysteries.Any())
    {
        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
            @foreach (var mystery in Model.Mysteries)
            {
                bool isCompleted = Model.UserCompletedMysteries.TryGetValue(mystery.Id, out bool completed) && completed;
                int solvedCount = Model.MysterySolvedCounts.TryGetValue(mystery.Id, out int count) ? count : 0;

                <div class="col">
                    <div class="card h-100 shadow-sm mystery-card @(isCompleted ? "border-success border-2" : "")">
                        <div class="card-body d-flex flex-column">
                            <div class="d-flex justify-content-between align-items-start mb-2">
                                <span class="badge @mystery.DifficultyClass">@mystery.Difficulty</span>
                                @if (isCompleted)
                                {
                                    <span class="badge bg-success"><i class="bi bi-check-circle-fill me-1"></i> Solved</span>
                                }
                            </div>
                            <div class="text-center mb-3 mystery-icon">
                                @Html.Raw(mystery.Icon ?? "<i class='bi bi-question-diamond fs-1 text-secondary'></i>")
                            </div>
                            <h5 class="card-title text-center">@mystery.Title</h5>
                            <p class="card-text text-muted small flex-grow-1">@mystery.Description</p>

                            <!-- Creator Info -->
                            <p class="card-text text-muted text-center small mb-2">
                                <i class="bi bi-person-fill me-1"></i> Created by: @(mystery.Creator?.UserName ?? "Unknown")
                            </p>
                            <!-- End Creator Info -->

                            <div class="d-flex justify-content-between align-items-center text-muted small mb-3">
                                <span><i class="bi bi-tags-fill me-1"></i> @mystery.Category</span>
                                <span><i class="bi bi-check-all me-1"></i> Solved by @solvedCount</span>
                            </div>
                            <div class="d-grid">
                                <a href="/Mysteries/Details/@mystery.Id" class="btn btn-primary btn-block mt-3">Begin Investigation</a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Pagination Controls -->
        <nav class="mt-4" aria-label="Mystery navigation">
            <ul class="pagination justify-content-center">
                <!-- Previous Page -->
                <li class="page-item @(!Model.HasPreviousPage ? "disabled" : "")">
                    <a class="page-link" href="/mysteries?PageIndex=@(Model.PageIndex - 1)&SelectedDifficulty=@Model.SelectedDifficulty&SelectedCategory=@Model.SelectedCategory&SearchTerm=@Model.SearchTerm" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>

                <!-- Page Numbers -->
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                        <a class="page-link" href="/mysteries?PageIndex=@i&SelectedDifficulty=@Model.SelectedDifficulty&SelectedCategory=@Model.SelectedCategory&SearchTerm=@Model.SearchTerm">@i</a>
                    </li>
                }

                <!-- Next Page -->
                <li class="page-item @(!Model.HasNextPage ? "disabled" : "")">
                    <a class="page-link" href="/mysteries?PageIndex=@(Model.PageIndex + 1)&SelectedDifficulty=@Model.SelectedDifficulty&SelectedCategory=@Model.SelectedCategory&SearchTerm=@Model.SearchTerm" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            </ul>
        </nav>
    }
    else
    {
        <div class="text-center mt-5">
            <i class="bi bi-binoculars-fill display-4 text-muted"></i>
            <p class="lead mt-3">No mysteries found matching your criteria.</p>
            <a asp-page="/Mysteries" class="btn btn-secondary">Clear Filters</a>
        </div>
    }
</div>

@section Styles {
    <style>
        .mysteries-hero {
            background: linear-gradient(135deg, var(--secondary), var(--secondary-dark));
            color: rgb(0, 0, 0);
            padding: 3rem 0;
            text-align: center;
        }
        .mystery-card {
            transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
        }
        .mystery-card:hover {
            transform: translateY(-5px);
            box-shadow: var(--shadow-lg) !important;
        }
        .mystery-icon i {
            font-size: 3rem; /* Adjust icon size */
            opacity: 0.8;
        }
        .difficulty-beginner { background-color: #198754; color: white; } /* Green */
        .difficulty-intermediate { background-color: #ffc107; color: black; } /* Yellow */
        .difficulty-advanced { background-color: #fd7e14; color: white; } /* Orange */
        .difficulty-expert { background-color: #dc3545; color: white; } /* Red */
        .border-success {
             border-color: var(--bs-success) !important;
        }
        /* Pagination styling - Updated for better visibility */
        .pagination .page-link {
            color: #000000; /* Changed to black text for better visibility */
            border-color: #dee2e6;
            font-weight: 500; /* Making the text slightly bolder */
        }
        .pagination .page-item.active .page-link {
            background-color: #0d6efd; /* Using a specific blue color instead of var(--primary) */
            border-color: #0d6efd;
            color: white; /* White text on blue background for better contrast */
            font-weight: 600; /* Bold text for the active page */
            box-shadow: 0 2px 4px rgba(0,0,0,0.15); /* Adding subtle shadow for depth */
        }
        .pagination .page-item.disabled .page-link {
            color: #6c757d;
            pointer-events: none;
        }
    </style>
}